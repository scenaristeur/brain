(function(){"use strict";var e={1642:function(e,o,t){var n=t(9242),i=t(3396);function s(e,o,t,n,s,r){const a=(0,i.up)("router-link"),l=(0,i.up)("SolidLogin"),c=(0,i.up)("SpinnerComp"),d=(0,i.up)("router-view");return(0,i.wg)(),(0,i.iD)(i.HY,null,[(0,i._)("nav",null,[(0,i.Wm)(a,{to:"/"},{default:(0,i.w5)((()=>[(0,i.Uk)("Home")])),_:1}),(0,i.Uk)(" | "),(0,i.Wm)(a,{to:"/about"},{default:(0,i.w5)((()=>[(0,i.Uk)("About")])),_:1}),(0,i.Uk)(" | "),(0,i.Wm)(l),(0,i.Wm)(c)]),(0,i.Wm)(d)],64)}const r={class:"login"},a={key:0,class:"d-flex align-items-center"},l={key:0},c={key:1,class:"d-flex align-items-center"},d=["href"];function u(e,o,t,n,s,u){const p=(0,i.up)("b-form-select-option"),g=(0,i.up)("b-form-select"),f=(0,i.up)("b-form-input"),h=(0,i.up)("b-form-group"),m=(0,i.up)("b-button");return(0,i.wg)(),(0,i.iD)("span",r,[null==u.session||0==u.session.isLoggedIn?((0,i.wg)(),(0,i.iD)("div",a,[(0,i.Wm)(h,null,{default:(0,i.w5)((()=>[(0,i.Wm)(g,{autofocus:"",size:"sm",modelValue:s.issuer,"onUpdate:modelValue":o[0]||(o[0]=e=>s.issuer=e),options:s.issuers,onChange:u.login},{first:(0,i.w5)((()=>[(0,i.Wm)(p,{value:null,disabled:""},{default:(0,i.w5)((()=>[(0,i.Uk)("-- Login / Connexion --")])),_:1})])),_:1},8,["modelValue","options","onChange"]),"other"==s.issuer?((0,i.wg)(),(0,i.iD)("div",l,[(0,i.Wm)(h,{id:"fieldset-1",description:"ex: `https://solidcommunity.net`",label:"url of your pod provider","label-for":"input-1","valid-feedback":"Thxs!","invalid-feedback":u.invalidFeedback,state:u.state},{default:(0,i.w5)((()=>[(0,i.Wm)(f,{id:"input-1",modelValue:s.other,"onUpdate:modelValue":o[1]||(o[1]=e=>s.other=e),state:u.state,onChange:u.onChange,trim:""},null,8,["modelValue","state","onChange"])])),_:1},8,["invalid-feedback","state"]),(0,i.Wm)(m,{size:"sm",variant:"info"},{default:(0,i.w5)((()=>[(0,i.Uk)("Login / connexion")])),_:1})])):(0,i.kq)("",!0)])),_:1})])):((0,i.wg)(),(0,i.iD)("div",c,[(0,i.Wm)(m,{onClick:u.logout,variant:"outline-danger",size:"sm"},{default:(0,i.w5)((()=>[(0,i.Uk)("Logout")])),_:1},8,["onClick"]),(0,i._)("a",{href:u.session.webId,target:"_blank"},"pod",8,d)]))])}var p={name:"SolidLogin",data(){return{issuers:[{value:"https://solidcommunity.net",text:"SolidCommunity.net (NSS)"},{value:"https://solidweb.org",text:"Solidweb.org (NSS)"},{value:"https://solidweb.me/",text:"Solidweb.me (CSS)"},{value:"https://broker.pod.inrupt.com",text:"Broker Pod Inrupt (Entreprise Solid Server)"},{value:"https://inrupt.net",text:"Inrupt.net (NSS)"},{value:"https://dev.inrupt.net",text:"dev.inrupt.net (NSS)"},{value:"https://trinpod.us/",text:"Trinpod.us (hs ?)"},{value:"other",text:"Autre / Other"}],issuer:null,restore:!0,other:""}},methods:{onInput(){console.log("input",this.other)},onChange(){console.log("change",this.other),void 0!=this.other&&void 0!=this.other.length&&(this.issuer=this.other,this.login(this.issuer))},login(e){console.log(e),this.issuer=e,null!=this.issuer&&"other"!=this.issuer&&(console.log(this.issuer),this.$login(this.issuer))},logout(){this.$logout()}},computed:{session:{get(){return this.$store.state.solid.session},set(){}},state(){return this.other.startsWith("http")},invalidFeedback(){return this.other.length>0&&!this.other.startsWith("http")?"the url of your pod provider should start with `http`":"the url of your pod provider, not your webId ! "}}},g=t(89);const f=(0,g.Z)(p,[["render",u]]);var h=f,m={name:"App",components:{SolidLogin:h,SpinnerComp:()=>t.e(95).then(t.bind(t,1095))},created(){this.$checkSolidSession()}};const w=(0,g.Z)(m,[["render",s]]);var b=w,v=t(5431);(0,v.z)("/brain/service-worker.js",{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh."),alert("This app has been updated, please close the app & re-open")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(e){console.error("Error during service worker registration:",e)}});var y=t(2483),k=t(7139);const S={class:"home"};function P(e,o,t,n,s,r){const a=(0,i.up)("b-dropdown-item"),l=(0,i.up)("b-dropdown-divider"),c=(0,i.up)("b-dropdown"),d=(0,i.up)("b-col"),u=(0,i.up)("b-button"),p=(0,i.up)("b-button-group"),g=(0,i.up)("b-button-toolbar"),f=(0,i.up)("b-row"),h=(0,i.up)("b-form-input"),m=(0,i.up)("b-form-group"),w=(0,i.up)("b-form"),b=(0,i.up)("b-container"),v=(0,i.up)("WorkspaceList");return(0,i.wg)(),(0,i.iD)("div",S,[(0,i.Wm)(b,{fluid:""},{default:(0,i.w5)((()=>[(0,i.Wm)(f,null,{default:(0,i.w5)((()=>[(0,i.Wm)(d,null,{default:(0,i.w5)((()=>[(0,i._)("div",null,[(0,i.Wm)(c,{id:"dropdown-1",text:"Workspaces",class:"m-md-2"},{default:(0,i.w5)((()=>[(0,i.Wm)(a,{onClick:r.workspaceCreate},{default:(0,i.w5)((()=>[(0,i.Uk)("New Workspace")])),_:1},8,["onClick"]),(0,i.Wm)(l),(0,i.Wm)(a,{disabled:""},{default:(0,i.w5)((()=>[(0,i.Uk)("Disabled action")])),_:1})])),_:1})])])),_:1}),(0,i.Wm)(d,null,{default:(0,i.w5)((()=>[(0,i._)("div",null,[(0,i.Wm)(g,{"key-nav":"","aria-label":"Toolbar with button groups"},{default:(0,i.w5)((()=>[(0,i.Wm)(p,{class:"mx-1"},{default:(0,i.w5)((()=>[(0,i.Wm)(u,null,{default:(0,i.w5)((()=>[(0,i.Uk)("new already exists")])),_:1}),(0,i.Wm)(u,null,{default:(0,i.w5)((()=>[(0,i.Uk)("Undo")])),_:1}),(0,i.Wm)(u,null,{default:(0,i.w5)((()=>[(0,i.Uk)("Redo")])),_:1})])),_:1})])),_:1})])])),_:1})])),_:1}),null!=s.nw?((0,i.wg)(),(0,i.j4)(f,{key:0},{default:(0,i.w5)((()=>[(0,i.Wm)(w,{onSubmit:r.onSubmit,onReset:r.onReset},{default:(0,i.w5)((()=>[(0,i.Wm)(m,{id:"input-group-1",label:"Workspace name:","label-for":"input-1",description:"Enter the name of the new workspace you want to create."},{default:(0,i.w5)((()=>[(0,i.Wm)(h,{id:"input-1",modelValue:s.nw.name,"onUpdate:modelValue":o[0]||(o[0]=e=>s.nw.name=e),type:"text",placeholder:"Enter name",required:""},null,8,["modelValue"])])),_:1}),(0,i.Wm)(u,{type:"submit",variant:"primary"},{default:(0,i.w5)((()=>[(0,i.Uk)("Submit")])),_:1}),(0,i.Wm)(u,{type:"reset",variant:"danger"},{default:(0,i.w5)((()=>[(0,i.Uk)("Reset")])),_:1})])),_:1},8,["onSubmit","onReset"])])),_:1})):(0,i.kq)("",!0)])),_:1}),(0,i.Uk)(" session "+(0,k.zw)(r.session)+" ",1),(0,i.Wm)(v)])}function $(e,o,t,n,s,r){const a=(0,i.up)("b-list-group-item"),l=(0,i.up)("b-list-group");return(0,i.wg)(),(0,i.j4)(l,null,{default:(0,i.w5)((()=>[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(r.workspaces,(e=>((0,i.wg)(),(0,i.j4)(a,{button:"",key:e.id,onClick:o=>r.workspaceRouter(e),class:"d-flex justify-content-between align-items-center"},{default:(0,i.w5)((()=>[(0,i.Uk)((0,k.zw)(e.name)+" / "+(0,k.zw)(e.type)+", "+(0,k.zw)(e.urls),1)])),_:2},1032,["onClick"])))),128))])),_:1})}t(7658);var W={name:"WorkspaceList",created(){},data(){return{}},props:{},methods:{workspaceRouter(e){this.$store.commit("core/currentWorkspace",e),this.$router.push({name:"workspace"})}},computed:{workspaces(){return this.$store.state.core.workspaces}}};const _=(0,g.Z)(W,[["render",$]]);var x=_,j=t(3029);class I{constructor(e={}){this.id=e.id||(0,j.Z)(),this.name=e.name||"new work space "+Date.now(),this.type=e.type||"memory",this.urls=e.urls||[],this.subspaces=e.subspaces||[],this.bases=e.bases||[]}test(){console.log("hello world")}}var O={name:"HomeView",components:{WorkspaceList:x},data(){return{nw:null}},async created(){},methods:{updateDir(e){console.log("up",e)},workspaceSelected(e){console.log(e.name,e.url)},workspaceCreate(){this.nw=new I,console.log(this.nw)},onSubmit(){console.log(this.nw),this.$createWorkspace(this.nw),this.onReset()},onReset(){this.nw=null},typeChanged(){"memory"==this.nw.type&&(this.nw.url="")}},computed:{session(){return this.$store.state.solid.session}}};const C=(0,g.Z)(O,[["render",P]]);var F=C;const N=[{path:"/",name:"home",component:F},{path:"/about",name:"about",component:()=>t.e(443).then(t.bind(t,833))},{path:"/workspace",name:"workspace",component:()=>t.e(443).then(t.bind(t,501))}],A=(0,y.p7)({history:(0,y.PO)("/brain/"),routes:N});var B=A,L=t(65);const T=()=>({workspaces:[],currentWorkspace:null,spinner:[],brain:void 0,brains:void 0}),R={addWorkspace(e,o){e.workspaces.push(o),console.log(e.workspaces)},currentWorkspace(e,o){e.currentWorkspace=o},spinnerAdd(e,o){e.spinner.push(o)},spinnerRemove(e,o){e.spinner=e.spinner.filter((e=>e.id!=o.id))},resetSpinner(e){e.spinner=[]},setBrain(e,o){console.log(o),e.brain=o},setBrains(e,o){e.brains=o,e.showBrainLoader=!0}},U={};var D={namespaced:!0,state:T,actions:U,mutations:R};const E=()=>({session:null,pod:null}),V={setSession(e,o){console.log("session",o),e.session=o},setPod(e,o){console.log("pod",o),e.pod=o}},J={};var z={namespaced:!0,state:E,actions:J,mutations:V},H=(0,L.MT)({state:{workspaces:[]},getters:{},mutations:{},actions:{},modules:{core:D,solid:z}}),M=t(2026),G=t(2841),Y=t(7541),Z=t(4786),q=t(8439),Q={install(e,o){console.log(e,o);let t=o.store;console.log(t),e.config.globalProperties.$createWorkspace=async e=>{if(console.log(e),null==t.state.solid.pod)alert("Please Login to your pod before trying to save this brain");else{let o=t.state.solid.pod.storage+"public/";console.log(o);let n=prompt("Please confirm the path where to store the workspace",o);if(console.log(n),null!=n){n=n.endsWith("/")?n:n+="/",e.path=n+e.id+"/";const o=await(0,G.Mf)(e.path,{fetch:q.he});console.log("container created",o);const t=await(0,Y._u)(e.path+".meta.json",new Blob([JSON.stringify("{}")],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he});console.log(`File saved at ${(0,Z.LH)(t)}`);const i=await(0,Y._u)(e.path+".acl.json",new Blob([JSON.stringify("{}")],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he});console.log(`File saved at ${(0,Z.LH)(i)}`);const s=await(0,Y._u)(e.path+"main.json",new Blob([JSON.stringify(e)],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he});console.log(`File saved at ${(0,Z.LH)(s)}`)}}},e.config.globalProperties.$getData=async o=>{let t={};switch(o.type){case"solid":t=await e.config.globalProperties.$getDataForSolid(o);break;case"gdrive":t=await e.config.globalProperties.$getDataForGdrive(o);break;case"ipfs":t=await e.config.globalProperties.$getDataForIpfs(o);break;default:break}return{w:o,data:t}},e.config.globalProperties.$getDataForSolid=async e=>({comment:"data from Solid",w:e}),e.config.globalProperties.$getDataForGdrive=async e=>({comment:"data from GDrive",w:e}),e.config.globalProperties.$getDataForIpfs=async e=>({comment:"data from IPFS",w:e})}};const X={install(e,o={}){let t=o.store;e.config.globalProperties.$spinnerAdd=function(e){t.commit("core/spinnerAdd",e)},e.config.globalProperties.$spinnerRemove=function(e){t.commit("core/spinnerRemove",e)}}};"undefined"!==typeof window&&window.Vue&&window.Vue.use(X);var K=X,ee=t(4651),oe=t(5902),te=t(96),ne=t(9740);const ie="solid_session_restore_url",se={install(e,o={}){let t=o.store;e.config.globalProperties.$checkSolidSession=async function(){localStorage.setItem(ie,window.location.toString()),q.vl((e=>{history.replaceState(null,"",e)})),await q.zr({restorePreviousSession:!0}).then((e=>{if(1==e.isLoggedIn){console.log(`Logged in with WebID [${e.webId}]`),t.commit("solid/setSession",e);let o=q.Cb();this.$getPodInfosFromSession(o),localStorage.setItem(ie,"")}}))},e.config.globalProperties.$login=async function(e){console.log("login",e),q.Cb().info.isLoggedIn||await q.x4({oidcIssuer:e,redirectUrl:window.location.href,clientName:"Brain"})},e.config.globalProperties.$logout=async function(){let e=q.Cb();await e.logout(),t.commit("solid/setSession",null),t.commit("solid/setPod",null)},e.config.globalProperties.$getPodInfosFromSession=async function(o){let n={};n.logged=o.info.isLoggedIn,n.logged?(n.webId=o.info.webId,n=await this.$getPodInfos(n),void 0==n.neuroneStore&&(n.neuroneStore=n.storage+"public/neurones/"),void 0==n.workspaces&&(n.workspaces=[]),t.commit("solid/setPod",n),null!=n.storage&&(n.brains=n.storage+"workspaces.json",e.config.globalProperties.$checkBrains())):t.commit("solid/setPod",null)},e.config.globalProperties.$getPodInfos=async function(e){try{const o=await(0,G.OE)(e.webId,{fetch:q.he});let t=await(0,ee.YY)(o,e.webId);e.name=await(0,oe.oX)(t,te.xY.name),e.friends=await(0,oe.MQ)(t,te.xY.knows).map((e=>({webId:e}))),e.storage=await(0,oe.Gr)(t,ne.WS.storage),null==e.storage&&(e.storage=e.webId.split("/").slice(0,-2).join("/")+"/"),e.photo=await(0,oe.Gr)(t,te.Fv.hasPhoto),void 0==e.neuroneStore&&(e.neuroneStore=e.storage+"public/neurones/"),e.workspaces=[];let n=e.storage+"settings/publicTypeIndex.ttl";const i=await(0,G.OE)(n,{fetch:q.he});let s=await(0,ee.oY)(i);for await(const r of s){let o=await(0,oe.MQ)(r,"http://www.w3.org/ns/solid/terms#forClass");if(o.includes("https://scenaristeur.github.io/verse#Workspace")){console.log(r);let o={};o.name=await(0,oe.oX)(r,te.AS.name),o.url=await(0,oe.Gr)(r,ne.UG.instance),e.workspaces.push(o)}}}catch(o){console.log("erreur",o,e)}return console.log(e),await e}}};"undefined"!==typeof window&&window.Vue&&window.Vue.use(se);var re=se;const ae={install(e,o={}){let t=o.store;async function n(o){const n=o.map((async function(o){if(o.endsWith("/"))return void e.config.globalProperties.$loadBrainFromSolid(o);e.config.globalProperties.$spinnerAdd({id:"loading "+o});const n=await(0,Y.hn)(o,{fetch:q.he});return new Promise((function(i,s){const r=new FileReader;r.onload=async()=>{try{let n=JSON.parse(r.result);await t.dispatch("core/saveNode",n),e.config.globalProperties.$spinnerRemove({id:"loading "+o}),i(n)}catch(n){s(n)}},r.onerror=e=>{s(e)},r.readAsText(n)}))}));await Promise.all(n),t.dispatch("core/getNodes")}function i(e){var o=e.lastIndexOf("/"),t=e.substring(o+1);return 0==t.length?i(e.slice(0,-1)):t}e.config.globalProperties.$saveBrainToSolid=async function(){if(console.log(t.state.core.nodes),null==t.state.solid.pod)alert("Please Login to your pod before trying to save this brain");else{let o=t.state.solid.pod.storage+"brains/";console.log(o);let n=prompt("Please confirm the path where to store the nodes",o);if(console.log(n),null!=n){n=n.endsWith("/")?n:n+="/",t.state.core.nodes.forEach((o=>{e.config.globalProperties.$spinnerAdd({id:"saving "+o.id})}));for await(const r of t.state.core.nodes){console.log(r.id,r),r["@context"]["@base"]=n;const o=await(0,Y._u)(n+i(r.id),new Blob([JSON.stringify(r)],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he});console.log(`File saved at ${(0,Z.LH)(o)}`),e.config.globalProperties.$spinnerRemove({id:"saving "+r.id})}e.config.globalProperties.$spinnerAdd({id:"saving "+t.state.solid.pod.brains});const o=await(0,Y.hn)(t.state.solid.pod.brains,{fetch:q.he}),s=new FileReader;s.onload=async()=>{try{let r=JSON.parse(s.result),a=Date.now(),l={id:n,name:i(n),updated:a,checksum:1e3*Math.random()};var o=r.brains.findIndex((e=>e.id==l.id));-1===o?(l.created=a,r.brains.push(l)):Object.assign(r.brains[o],l),await(0,Y._u)(t.state.solid.pod.brains,new Blob([JSON.stringify(r)],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he}),e.config.globalProperties.$checkBrains(),e.config.globalProperties.$spinnerRemove({id:"saving "+t.state.solid.pod.brains})}catch(r){console.log(r)}},s.onerror=e=>{console.log(e)},s.readAsText(o)}else alert("saving to Solid Pod aborted")}},e.config.globalProperties.$loadBrainsFromWikidata=async function(e){console.log(e),e.forEach((async function(e){console.log(e);let o={id:e.url,name:e.item.aliases&&e.item.aliases[0]||e.item.label||e.text,color:"lightblue",url:e.url,source:"https://wikidata.org"};await t.dispatch("core/saveNode",o)})),await t.dispatch("core/getNodes")},e.config.globalProperties.$brainsFromPod=async function(o){let t=o.storage+"public/brains/";e.config.globalProperties.$spinnerAdd({id:"loading "+t});let n=null;try{n=await(0,G.OE)(t,{fetch:q.he});let e=await(0,G.kQ)(n,{fetch:q.he});return console.log(e),e}catch(i){console.log(i)}e.config.globalProperties.$spinnerRemove({id:"loading "+t})},e.config.globalProperties.$loadBrainFromSolid=async function(o){if(void 0==o){let e=null!=t.state.solid.pod?t.state.solid.pod.storage+"brains/":"https://solid.provider/brains_folder or example...";console.log(e),o=prompt("Load brain from ",e)}if(null!=o){console.log("load brain from",o),e.config.globalProperties.$spinnerAdd({id:"loading "+o});let t=null;try{t=await(0,G.OE)(o,{fetch:q.he});let e=await(0,G.kQ)(t,{fetch:q.he});console.log(e),await n(e)}catch(i){alert(i)}e.config.globalProperties.$spinnerRemove({id:"loading "+o})}},e.config.globalProperties.$checkBrains=async function(){e.config.globalProperties.$spinnerAdd({id:"checkBrains"});try{const e=await(0,Y.hn)(t.state.solid.pod.brains,{fetch:q.he});console.log(e)}catch(o){let e={"@context":{name:"http://xmlns.com/foaf/0.1/name",knows:"http://xmlns.com/foaf/0.1/knows","@base":"http://local/","@vocab":"https://scenaristeur.github.io/agent/",id:"@id",type:"@type",reverse:"@reverse",homepage:{"@id":"http://xmlns.com/foaf/0.1/homepage","@type":"@id"}},id:(0,j.Z)(),name:"Brain Index",type:"brainIndex",brains:[],homepage:"https://scenaristeur.github.io/agent"};await(0,Y._u)(t.state.solid.pod.brains,new Blob([JSON.stringify(e)],{type:"application/ld+json"}),{contentType:"application/ld+json",fetch:q.he})}try{const e=await(0,Y.hn)(t.state.solid.pod.brains,{fetch:q.he}),o=new FileReader;o.onload=async()=>{try{let e=JSON.parse(o.result);t.commit("core/setBrains",e)}catch(e){console.log(e)}},o.onerror=e=>{console.log(e)},o.readAsText(e)}catch(o){console.log(o)}finally{e.config.globalProperties.$spinnerRemove({id:"checkBrains"})}},e.config.globalProperties.$loadNeurone=async function(o){e.config.globalProperties.$spinnerAdd({id:"loading "+o});const t=await(0,Y.hn)(o,{fetch:q.he});return new Promise((function(n,i){const s=new FileReader;s.onload=async()=>{try{let t=JSON.parse(s.result);e.config.globalProperties.$spinnerRemove({id:"loading "+o}),n(t)}catch(t){i(t)}},s.onerror=e=>{i(e)},s.readAsText(t)}))}}};"undefined"!==typeof window&&window.Vue&&window.Vue.use(ae);var le=ae;(0,n.ri)(b).use(H).use(B).use(M.ZP).use(K,{store:H}).use(re,{store:H}).use(le,{store:H}).use(Q,{store:H}).mount("#app")}},o={};function t(n){var i=o[n];if(void 0!==i)return i.exports;var s=o[n]={exports:{}};return e[n].call(s.exports,s,s.exports,t),s.exports}t.m=e,function(){var e=[];t.O=function(o,n,i,s){if(!n){var r=1/0;for(d=0;d<e.length;d++){n=e[d][0],i=e[d][1],s=e[d][2];for(var a=!0,l=0;l<n.length;l++)(!1&s||r>=s)&&Object.keys(t.O).every((function(e){return t.O[e](n[l])}))?n.splice(l--,1):(a=!1,s<r&&(r=s));if(a){e.splice(d--,1);var c=i();void 0!==c&&(o=c)}}return o}s=s||0;for(var d=e.length;d>0&&e[d-1][2]>s;d--)e[d]=e[d-1];e[d]=[n,i,s]}}(),function(){t.n=function(e){var o=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(o,{a:o}),o}}(),function(){t.d=function(e,o){for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})}}(),function(){t.f={},t.e=function(e){return Promise.all(Object.keys(t.f).reduce((function(o,n){return t.f[n](e,o),o}),[]))}}(),function(){t.u=function(e){return"js/"+(443===e?"about":e)+"."+{95:"d076befd",443:"5187365b"}[e]+".js"}}(),function(){t.miniCssF=function(e){}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)}}(),function(){var e={},o="brain:";t.l=function(n,i,s,r){if(e[n])e[n].push(i);else{var a,l;if(void 0!==s)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var u=c[d];if(u.getAttribute("src")==n||u.getAttribute("data-webpack")==o+s){a=u;break}}a||(l=!0,a=document.createElement("script"),a.charset="utf-8",a.timeout=120,t.nc&&a.setAttribute("nonce",t.nc),a.setAttribute("data-webpack",o+s),a.src=n),e[n]=[i];var p=function(o,t){a.onerror=a.onload=null,clearTimeout(g);var i=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),i&&i.forEach((function(e){return e(t)})),o)return o(t)},g=setTimeout(p.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=p.bind(null,a.onerror),a.onload=p.bind(null,a.onload),l&&document.head.appendChild(a)}}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.p="/brain/"}(),function(){var e={143:0};t.f.j=function(o,n){var i=t.o(e,o)?e[o]:void 0;if(0!==i)if(i)n.push(i[2]);else{var s=new Promise((function(t,n){i=e[o]=[t,n]}));n.push(i[2]=s);var r=t.p+t.u(o),a=new Error,l=function(n){if(t.o(e,o)&&(i=e[o],0!==i&&(e[o]=void 0),i)){var s=n&&("load"===n.type?"missing":n.type),r=n&&n.target&&n.target.src;a.message="Loading chunk "+o+" failed.\n("+s+": "+r+")",a.name="ChunkLoadError",a.type=s,a.request=r,i[1](a)}};t.l(r,l,"chunk-"+o,o)}},t.O.j=function(o){return 0===e[o]};var o=function(o,n){var i,s,r=n[0],a=n[1],l=n[2],c=0;if(r.some((function(o){return 0!==e[o]}))){for(i in a)t.o(a,i)&&(t.m[i]=a[i]);if(l)var d=l(t)}for(o&&o(n);c<r.length;c++)s=r[c],t.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return t.O(d)},n=self["webpackChunkbrain"]=self["webpackChunkbrain"]||[];n.forEach(o.bind(null,0)),n.push=o.bind(null,n.push.bind(n))}();var n=t.O(void 0,[998],(function(){return t(1642)}));n=t.O(n)})();
//# sourceMappingURL=app.88b19281.js.map