{"version":3,"file":"js/app.5eff038b.js","mappings":"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","sources":["webpack://brain/./src/App.vue","webpack://brain/./src/components/SolidLogin.vue","webpack://brain/./src/components/SolidLogin.vue?f0cc","webpack://brain/./src/components/SpinnerComp.vue","webpack://brain/./src/components/SpinnerComp.vue?b4fc","webpack://brain/./src/App.vue?7ccd","webpack://brain/./src/registerServiceWorker.js","webpack://brain/./src/views/HomeView.vue","webpack://brain/./src/views/WorkspaceList.vue","webpack://brain/./src/views/WorkspaceList.vue?f185","webpack://brain/./src/entities/workspace.js","webpack://brain/./src/views/HomeView.vue?1da1","webpack://brain/./src/router/index.js","webpack://brain/./src/store/modules/core.js","webpack://brain/./src/store/modules/solid.js","webpack://brain/./src/store/index.js","webpack://brain/./src/plugins/BrainPlugin.js","webpack://brain/./src/plugins/core-plugin.js","webpack://brain/./src/plugins/solid-plugin.js","webpack://brain/./src/plugins/solid-data-plugin.js","webpack://brain/./src/main.js","webpack://brain/webpack/bootstrap","webpack://brain/webpack/runtime/chunk loaded","webpack://brain/webpack/runtime/compat get default export","webpack://brain/webpack/runtime/define property getters","webpack://brain/webpack/runtime/ensure chunk","webpack://brain/webpack/runtime/get javascript chunk filename","webpack://brain/webpack/runtime/get mini-css chunk filename","webpack://brain/webpack/runtime/global","webpack://brain/webpack/runtime/hasOwnProperty shorthand","webpack://brain/webpack/runtime/load script","webpack://brain/webpack/runtime/make namespace object","webpack://brain/webpack/runtime/publicPath","webpack://brain/webpack/runtime/jsonp chunk loading","webpack://brain/webpack/startup"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/about\">About</router-link> |\n    <SolidLogin />\n    <SpinnerComp />\n  </nav>\n  <router-view/>\n</template>\n\n<script>\n// @ is an alias to /src\n\nimport SolidLogin from '@/components/SolidLogin.vue'\nimport SpinnerComp from '@/components/SpinnerComp'\n\n\n\n\nexport default {\n  name: 'App',\n  components: {\n    SolidLogin,\n    SpinnerComp\n  \n  },\n  created(){\n    this.$checkSolidSession()\n  }\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","<template>\n  <span class=\"login\">\n    <!-- <b-icon-person-circle></b-icon-person-circle> -->\n    <div v-if=\"session == null || session.isLoggedIn == false\" class=\"d-flex align-items-center\">\n      <b-form-group>\n\n        <!-- <b-dropdown id=\"dropdown-login\"\n        text=\"Login\"\n        class=\"m-md-2\"\n        size=\"sm\"\n        variant=\"success\">\n        <b-dropdown-item v-for=\"issuer in issuers\" :key=\"issuer.value\" @click=\"login(issuer.value)\">\n        {{issuer.text}}\n      </b-dropdown-item>\n    </b-dropdown> -->\n\n\n    <b-form-select autofocus size=\"sm\" v-model=\"issuer\"\n    :options=\"issuers\" @change=\"login\">\n    <template #first>\n      <b-form-select-option :value=\"null\" disabled>-- Login / Connexion --</b-form-select-option>\n    </template>\n\n  </b-form-select>\n\n  <div v-if=\"issuer == 'other'\">\n    <b-form-group\n    id=\"fieldset-1\"\n    description= \"ex: `https://solidcommunity.net`\"\n    label=\"url of your pod provider\"\n    label-for=\"input-1\"\n    valid-feedback=\"Thxs!\"\n    :invalid-feedback=\"invalidFeedback\"\n    :state=\"state\"\n    >\n\n    <b-form-input id=\"input-1\" v-model=\"other\" :state=\"state\" @change=\"onChange\" trim></b-form-input>\n  </b-form-group>\n\n  <b-button size=\"sm\" variant=\"info\">Login / connexion</b-button>\n</div>\n</b-form-group>\n</div>\n\n<div v-else class=\"d-flex align-items-center\">\n  <b-button @click=\"logout\" variant=\"outline-danger\" size=\"sm\">Logout</b-button>\n  <a :href=\"session.webId\" target=\"_blank\">pod</a>\n</div>\n\n</span>\n</template>\n\n<script>\nexport default {\n  name: \"SolidLogin\",\n  data() {\n    return {\n      issuers: [\n        { value: \"https://solidcommunity.net\", text: 'SolidCommunity.net (NSS)' },\n        { value: \"https://solidweb.org\", text: 'Solidweb.org (NSS)' },\n        { value: 'https://solidweb.me/', text: 'Solidweb.me (CSS)'},\n        { value: \"https://broker.pod.inrupt.com\", text: 'Broker Pod Inrupt (Entreprise Solid Server)' },\n        { value: \"https://inrupt.net\", text: 'Inrupt.net (NSS)' },\n        { value: \"https://dev.inrupt.net\", text: 'dev.inrupt.net (NSS)' },\n        { value: \"https://trinpod.us/\", text: 'Trinpod.us (hs ?)'},\n        { value: \"other\", text: 'Autre / Other' },\n      ],\n      issuer: null,\n      restore: true,\n      other: \"\"\n    }\n  },\n  methods:{\n    onInput(){\n      console.log(\"input\", this.other)\n    },\n    onChange(){\n      console.log(\"change\", this.other)\n      if (this.other != undefined && this.other.length != undefined)  {\n        this.issuer = this.other\n        this.login(this.issuer)\n      }\n    },\n    login(issuer){\n      console.log(issuer)\n      this.issuer = issuer\n      if (this.issuer != null && this.issuer != \"other\"){\n        console.log(this.issuer)\n        this.$login(this.issuer)\n      }\n    },\n    logout(){\n      this.$logout()\n    }\n  },\n  computed:{\n    session:{\n      get () { return this.$store.state.solid.session },\n      set (/*value*/) { /*this.updateTodo(value)*/ }\n    },\n    state() {\n      return this.other.startsWith('http')\n    },\n    invalidFeedback() {\n      if (this.other.length> 0 && !this.other.startsWith('http')) {\n        return \"the url of your pod provider should start with `http`\"\n      }\n      return \"the url of your pod provider, not your webId ! \"\n    }\n  }\n}\n</script>\n\n<style>\n/* .login{\nfloat: left\n} */\n</style>\n","import { render } from \"./SolidLogin.vue?vue&type=template&id=34971078\"\nimport script from \"./SolidLogin.vue?vue&type=script&lang=js\"\nexport * from \"./SolidLogin.vue?vue&type=script&lang=js\"\n\nimport \"./SolidLogin.vue?vue&type=style&index=0&id=34971078&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <!-- <div> Spinner -->\n  <span>\n    <span v-if=\"spinner.length > 0\">\n      <!-- Loading, {{spinner}} -->\n      <b-button variant=\"warning\" disabled>\n        <b-spinner small type=\"grow\"></b-spinner>\n        <!-- <b-badge v-b-modal.modal-tasks variant=\"primary\">{{spinner.length}}</b-badge> -->\n        <b-badge variant=\"primary\">{{spinner.length}}</b-badge>\n\n      </b-button>\n\n\n    </span>\n    <!-- <b-modal id=\"modal-tasks\" title=\"Tasks\">\n      {{spinner.length}} tasks pending <b-button @click=\"reset\" variant=\"outline-warning\" size=\"sm\">reset</b-button>\n      <ul>\n        <li v-for=\"w in spinner\" :key=\"w.id\"> {{w.id}}</li>\n      </ul>\n    </b-modal> -->\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"SpinnerComp\",\n  methods: {\n    reset(){\n      this.$store.commit('core/resetSpinner')\n    }\n  },\n  computed: {\n    spinner() {\n      return this.$store.state.core.spinner\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./SpinnerComp.vue?vue&type=template&id=26a44ccd\"\nimport script from \"./SpinnerComp.vue?vue&type=script&lang=js\"\nexport * from \"./SpinnerComp.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4a96112f\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4a96112f&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from \"register-service-worker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        \"App is being served from cache by a service worker.\\n\" +\n          \"For more details, visit https://goo.gl/AFskqB\"\n      );\n    },\n    registered() {\n      console.log(\"Service worker has been registered.\");\n    },\n    cached() {\n      console.log(\"Content has been cached for offline use.\");\n    },\n    updatefound() {\n      console.log(\"New content is downloading.\");\n    },\n    updated() {\n      console.log(\"New content is available; please refresh.\");\n      alert(\"This app has been updated, please close the app & re-open\");\n    },\n    offline() {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    },\n    error(error) {\n      console.error(\"Error during service worker registration:\", error);\n    },\n  });\n}\n","<template>\n  <div class=\"home\">\n    <b-container fluid>\n      <b-row>\n        <b-col>\n          <div>\n            <b-dropdown id=\"dropdown-1\" text=\"Workspaces\" class=\"m-md-2\">\n              <b-dropdown-item @click=\"workspaceCreate\">New Workspace</b-dropdown-item>\n              <b-dropdown-divider></b-dropdown-divider>\n              <!-- <b-dropdown-item v-for=\"w in workspaces\" :key=\"w.name\" @click=\"workspaceSelected(w)\">{{ w.name\n              }}</b-dropdown-item> -->\n\n              <b-dropdown-item disabled>Disabled action</b-dropdown-item>\n            </b-dropdown>\n          </div>\n        </b-col>\n        <b-col>\n          <div>\n            <b-button-toolbar key-nav aria-label=\"Toolbar with button groups\">\n              <!-- <b-button-group class=\"mx-1\">\n                <b-button>&laquo;</b-button>\n                <b-button>&lsaquo;</b-button>\n              </b-button-group> -->\n              <b-button-group class=\"mx-1\">\n                <b-button>new already exists</b-button>\n                <b-button>Undo</b-button>\n                <b-button>Redo</b-button>\n              </b-button-group>\n              <!-- <b-button-group class=\"mx-1\">\n                <b-button>&rsaquo;</b-button>\n                <b-button>&raquo;</b-button>\n              </b-button-group> -->\n            </b-button-toolbar>\n          </div>\n\n        </b-col>\n\n      </b-row>\n      <b-row v-if=\"nw != null\">\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\">\n          <b-form-group id=\"input-group-1\" label=\"Workspace name:\" label-for=\"input-1\"\n            description=\"Enter the name of the new workspace you want to create.\">\n            <b-form-input id=\"input-1\" v-model=\"nw.name\" type=\"text\" placeholder=\"Enter name\" required></b-form-input>\n          </b-form-group>\n\n          <!-- <b-form-group id=\"input-group-3\" label=\"Type:\" label-for=\"input-3\">\n            <b-form-select id=\"input-3\" v-model=\"nw.type\" :options=\"types\" required @input=\"typeChanged\"></b-form-select>\n          </b-form-group> -->\n\n\n          <!-- \n          <b-form-group id=\"input-group-2\" label=\"Workspace location:\" label-for=\"input-2\" >\n            <b-form-input id=\"input-2\" v-model=\"nw.url\" placeholder=\"Enter location\" required></b-form-input>\n          </b-form-group> -->\n\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n        </b-form>\n\n      </b-row>\n    </b-container>\n\n\n    session {{ session && session.webId }} , {{ pod && pod.photo }}\n    <hr>\n    <!-- brains: <div v-if=\"brains != undefined\">{{ brains.brains }}</div> -->\n\n    <WorkspaceList />\n    <!-- <img alt=\"Vue logo\" src=\"../assets/logo.png\">\n    <HelloWorld msg=\"Welcome to Your Vue.js App\" /> -->\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport WorkspaceList from '@/views/WorkspaceList.vue'\nimport Workspace from '@/entities/workspace.js';\n\n\n\nexport default {\n  name: 'HomeView',\n  components: {\n    // HelloWorld,\n    WorkspaceList\n  },\n  data() {\n    return {\n      // workspaces_examples: [\n      //   { name: \"LocalStorage example\", type: \"localstorage\" },\n      //   { name: \"Memory example\", type: \"memory\" },\n      //   { name: \"Solid example\", urls: [\"https://spoggy-test2.solidcommunity.net/public/protocoleb_test/\"], type: \"solid\" },\n      //   { name: \"Ipfs example\", urls: [\"ipfs://QmPK9UToVFCHKAuGjxfLUKN37PGF7ZjQVa1t6dcY7yLpHi\"], type: \"ipfs\" },\n      //   { name: \"Google Drive example\", urls: [\"https://drive.google.com/drive/folders/1K9fATJFtXuJVZzjbgW6KwFvHPBADt4G4\"], type: \"gdrive\" },\n      // ],\n      nw: null,\n      // types: [\"memory\", \"localstorage\", \"filesystem\", \"solid\", \"gdrive\", \"ipfs\"],\n    }\n  },\n  async created() {\n    // for (let workspace of this.workspaces_examples) {\n    //   let ws = new Workspace(workspace)\n    //   await this.$store.commit('core/addWorkspace', ws)\n    // }\n  },\n  methods: {\n    updateDir(data) {\n      console.log('up', data)\n    },\n    workspaceSelected(w) {\n      console.log(w.name, w.url)\n    },\n    workspaceCreate() {\n      this.nw = new Workspace()\n      console.log(this.nw)\n    },\n    onSubmit() {\n      console.log(this.nw)\n      //this.$store.commit('core/addWorkspace', this.nw)\n      this.$createWorkspace(this.nw)\n      this.onReset()\n    },\n    onReset() {\n      this.nw = null\n    },\n    typeChanged() {\n      this.nw.type == \"memory\" ? this.nw.url = \"\" : \"\"\n    }\n  },\n  computed: {\n    session() {\n      return this.$store.state.solid.session\n    },\n    pod() {\n      return this.$store.state.solid.pod\n    },\n    brains() {\n      return this.$store.state.core.brains\n    }\n  },\n}\n</script>\n","<template>\n  <div>\n    <div v-if=\"brains == undefined\">\n      Please first create a Workspace, if it does not work, look for error message in the js console with Ctrl+Maj+I.\n    </div>\n    <b-list-group v-else>\n      <b-list-group-item v-for=\"w in brains.brains\" button :key=\"w.id\" @click=\"workspaceRouter(w)\"\n        class=\"d-flex justify-content-between align-items-center\">\n        {{ w.name }}\n        / {{ w.path }}\n\n      </b-list-group-item>\n\n    </b-list-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"WorkspaceList\",\n  created() { },\n  data() {\n    return {};\n  },\n  props: {},\n  methods: {\n    workspaceRouter(w) {\n      this.$store.commit('core/currentWorkspace', w)\n      this.$router.push({\n        name: 'workspace'\n      })\n    }\n  },\n  computed: {\n    brains() {\n      return this.$store.state.core.brains\n    }\n  }\n};\n</script>\n\n<style scoped></style>","import { render } from \"./WorkspaceList.vue?vue&type=template&id=d1e93c2a\"\nimport script from \"./WorkspaceList.vue?vue&type=script&lang=js\"\nexport * from \"./WorkspaceList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { v4 as uuidv4 } from \"uuid\";\n\nexport default class Workspace {\n  constructor(opts = {}) {\n    this.id = opts.id || uuidv4();\n    this.name = opts.name || Date.now();\n    this.type = opts.type || \"solid\";\n    this.urls = opts.urls || [];\n    this.subspaces = opts.subspaces || [];\n    this.bases = opts.bases || [];\n    this['@context']= {\n      \"name\": \"http://xmlns.com/foaf/0.1/name\",\n      \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n      \"@base\": \"http://local/\",\n      \"@vocab\": \"https://scenaristeur.github.io/agent/\",\n      \"id\": \"@id\",\n      \"type\": \"@type\",\n      \"reverse\": \"@reverse\",\n      \"homepage\": {\n        \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n        \"@type\": \"@id\"\n      }\n    },\n    this.homepage = \"https://scenaristeur.github.io/brain\"\n  }\n  test() {\n    console.log(\"hello world\");\n  }\n}\n","import { render } from \"./HomeView.vue?vue&type=template&id=f5d27c3e\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\nimport HomeView from \"../views/HomeView.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: HomeView,\n  },\n  {\n    path: \"/about\",\n    name: \"about\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/AboutView.vue\"),\n  },\n  {\n    path: \"/workspace\",\n    name: \"workspace\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/WorkspaceView.vue\"),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","//import * as api from \"@/api/syncld\";\n\nconst state = () => ({\n  workspaces: [],\n  currentWorkspace: null,\n  spinner: [],\n  brain: undefined,\n  brains: undefined,\n  //   coreCurrent: null,\n  //   // user: null,\n  //   history: [],\n});\n\nconst mutations = {\n  addWorkspace(state, w) {\n    state.workspaces.push(w);\n    console.log(state.workspaces);\n  },\n  currentWorkspace(state, w) {\n    state.currentWorkspace = w;\n  },\n  spinnerAdd(state,t){\n    state.spinner.push(t)\n  },\n  spinnerRemove(state, t){\n    state.spinner = state.spinner.filter(x => x.id!=t.id )\n  },\n  resetSpinner(state){\n    state.spinner = []\n  },\n  setBrain(state, b){\n    console.log(b)\n    state.brain = b\n  },\n  setBrains(state, b){\n    state.brains = b\n    state.showBrainLoader = true\n  },\n\n  // setToast(state, t) {\n  //   state.toaster = t;\n  // },\n  // pushToHistory(state, n) {\n\n  //   let history = state.history.filter((todo) => todo[\"id\"] != n[\"id\"]);\n  //    history.unshift({\n  //     \"id\": n[\"id\"],\n  //     \"name\": n[\"name\"],\n  //     \"group\": n[\"group\"],\n  //   });\n  //   state.history = history;\n  // },\n  // updateNode(n){\n  //   console.log(\"todo find node byId and update\",n)\n  // }\n};\n\nconst actions = {\n  //   create(/*{ commit, state },*/ item) {\n  //     api.create(item);\n  //   },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n};\n","// import Vue from 'vue'\n// import idb from '@/api/idb-nodes';\n// import * as Automerge from 'automerge'\n// import { v4 as uuidv4 } from 'uuid';\n\nconst state = () => ({\n  // doc: null\n  session: null,\n  pod: null\n})\n\nconst mutations = {\n  setSession(state, s){\n    console.log(\"session\",s)\n    state.session = s\n  },\n  setPod(state, p){\n    console.log(\"pod\",p)\n    state.pod = p\n  },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","import { createStore } from 'vuex'\nimport core from './modules/core'\nimport solid from './modules/solid'\n\nexport default createStore({\n  state: {\n    workspaces: []\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n    core, solid\n  }\n})\n","import {\n  // getSolidDataset,\n  // getThingAll,\n  //getPublicAccess,\n  //  getAgentAccess,\n  //getSolidDatasetWithAcl,\n  //getPublicAccess,\n  //getAgentAccess,\n  getFile,\n  // isRawData,\n  // getContentType,\n  //saveFileInContainer,\n  // getContainedResourceUrlAll,\n  //getStringNoLocaleAll,\n  createContainerAt,\n  getSourceUrl,\n  // deleteFile,\n  //removeThing,\n  // removeAll,\n  //removeStringNoLocale,\n  //deleteContainer,\n  // addStringNoLocale,\n  // setThing,\n  // saveSolidDatasetAt,\n  //createSolidDataset,\n  // createThing,\n  // addUrl,\n  //buildThing,\n  overwriteFile,\n  // getStringNoLocale,\n  // getThing,\n  // getUrlAll,\n  // getUrl,\n  //addDatetime,\n  //  getDatetime,\n  //setUrl,\n  //setStringNoLocale,\n  //setDecimal,\n  //setInteger,\n  //  getDecimal,\n  //getInteger,\n  // setDatetime\n} from \"@inrupt/solid-client\";\nimport * as sc from \"@inrupt/solid-client-authn-browser\";\n\nexport default {\n  install(app, options) {\n    // configure the app\n    console.log(app, options);\n    let store = options.store;\n    console.log(store);\n    // observeDeep(store.todos, this.y_storeChanged);\n    app.config.globalProperties.$createWorkspace = async (w) => {\n      console.log(w);\n      if (store.state.solid.pod == null) {\n        alert(\"Please Login to your pod before trying to save this brain\");\n      } else {\n        let suggestedpath = store.state.solid.pod.storage + \"public/\";\n        console.log(suggestedpath);\n\n        let path = prompt(\n          \"Please confirm the path where to store the workspace\",\n          suggestedpath\n        );\n        console.log(path);\n        if (path != null) {\n          path = !path.endsWith(\"/\") ? (path += \"/\") : path;\n          w.path = path + w.id + \"/\";\n          const container = await createContainerAt(w.path, {\n            fetch: sc.fetch,\n          });\n          console.log(\"container created\", container);\n          const savedFileMeta = await overwriteFile(\n            w.path + \".meta.json\",\n            new Blob([JSON.stringify(\"{}\")], { type: \"application/ld+json\" }),\n            { contentType: \"application/ld+json\", fetch: sc.fetch }\n          );\n          //  console.log(savedFile)\n\n          console.log(`File saved at ${getSourceUrl(savedFileMeta)}`);\n          const savedFileAcl = await overwriteFile(\n            w.path + \".acl.json\",\n            new Blob([JSON.stringify(\"{}\")], { type: \"application/ld+json\" }),\n            { contentType: \"application/ld+json\", fetch: sc.fetch }\n          );\n          //  console.log(savedFile)\n\n          console.log(`File saved at ${getSourceUrl(savedFileAcl)}`);\n\n          const savedFileMain = await overwriteFile(\n            w.path + \"main.json\",\n            new Blob([JSON.stringify(w)], { type: \"application/ld+json\" }),\n            { contentType: \"application/ld+json\", fetch: sc.fetch }\n          );\n          //  console.log(savedFile)\n\n          console.log(`File saved at ${getSourceUrl(savedFileMain)}`);\n          //   store.state.core.nodes.forEach(n => {\n          //     app.config.globalProperties.$spinnerAdd({id: \"saving \"+n.id})\n          //   });\n          app.config.globalProperties.$addToIndex(w);\n        }\n      }\n    };\n\n    app.config.globalProperties.$addToIndex = async (w) => {\n      console.log(w);\n      try {\n        const file = await getFile(store.state.solid.pod.brains, {\n          fetch: sc.fetch,\n        });\n        const reader = new FileReader();\n\n        reader.onload = async () => {\n          try {\n            let brainsIndex = JSON.parse(reader.result);\n            console.log(\"brains index\", brainsIndex);\n            brainsIndex.brains.push({ name: w.name, path: w.path });\n            store.commit(\"core/setBrains\", brainsIndex);\n\n            let indexUpdated = await overwriteFile(\n              store.state.solid.pod.brains,\n              new Blob([JSON.stringify(brainsIndex)], {\n                type: \"application/ld+json\",\n              }),\n              { contentType: \"application/ld+json\", fetch: sc.fetch }\n            );\n            console.log(\"indexUpdated\", indexUpdated);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsText(file);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        app.config.globalProperties.$spinnerRemove({ id: \"checkBrains\" });\n      }\n    };\n\n    app.config.globalProperties.$getData = async (w) => {\n      let data = {};\n      switch (w.type) {\n        case \"solid\":\n          data = await app.config.globalProperties.$getDataForSolid(w);\n          break;\n        case \"gdrive\":\n          data = await app.config.globalProperties.$getDataForGdrive(w);\n          break;\n        case \"ipfs\":\n          data = await app.config.globalProperties.$getDataForIpfs(w);\n          break;\n\n        default:\n          break;\n      }\n\n      return { w: w, data: data };\n    };\n\n    app.config.globalProperties.$getDataForSolid = async (w) => {\n      return { comment: \"data from Solid\", w: w };\n    };\n\n    app.config.globalProperties.$getDataForGdrive = async (w) => {\n      return { comment: \"data from GDrive\", w: w };\n    };\n\n    app.config.globalProperties.$getDataForIpfs = async (w) => {\n      return { comment: \"data from IPFS\", w: w };\n    };\n  },\n};\n","// import ForceGraph3D from '3d-force-graph';\n//import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\n// let graph = undefined\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n    // app.config.globalProperties.$coreInit = async function(options = {}){\n    //     let core = new Core(options)\n    //   store.commit ('core/setCore', core)\n    // }\n    app.config.globalProperties.$spinnerAdd = function(task){\n      store.commit('core/spinnerAdd', task)\n    }\n    app.config.globalProperties.$spinnerRemove = function(task){\n      store.commit('core/spinnerRemove', task)\n    }\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import {\n  getSolidDataset,\n  getThingAll,\n  //getPublicAccess,\n  //  getAgentAccess,\n  //getSolidDatasetWithAcl,\n  //getPublicAccess,\n  //getAgentAccess,\n  // getFile,\n  // isRawData,\n  // getContentType,\n  //saveFileInContainer,\n  // getContainedResourceUrlAll,\n  // getStringNoLocaleAll,\n  // createContainerAt,\n  // getSourceUrl,\n  // deleteFile,\n  //removeThing,\n  // removeAll,\n  //removeStringNoLocale,\n  //deleteContainer,\n  //addStringNoLocale,\n  //setThing,\n  //saveSolidDatasetAt,\n  //createSolidDataset,\n  //createThing,\n  //addUrl,\n  //buildThing,\n  //overwriteFile,\n  getStringNoLocale,\n  getThing,\n  getUrlAll,\n  getUrl,\n  //addDatetime,\n  //  getDatetime,\n  //setUrl,\n  //setStringNoLocale,\n  //setDecimal,\n  //setInteger,\n  //  getDecimal,\n  //getInteger,\n  // setDatetime\n} from \"@inrupt/solid-client\";\nimport { FOAF, /*LDP,*/ VCARD, /*RDF,*/ AS, /*RDFS, OWL*/  } from \"@inrupt/vocab-common-rdf\";\nimport { WS, SOLID } from \"@inrupt/vocab-solid-common\";\n\nimport * as sc from '@inrupt/solid-client-authn-browser'\nconst LOCAL_STORAGE_KEY__SOLID_SESSION_RESTORE_URL = \"solid_session_restore_url\"\n// import { fetch as node_fetch } from 'node-fetch';\n\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n\n    app.config.globalProperties.$checkSolidSession = async function(){\n      localStorage.setItem(LOCAL_STORAGE_KEY__SOLID_SESSION_RESTORE_URL, window.location.toString())\n      // console.log(\"check session\", document.location)\n      // localStorage.setItem(Date.now, document.location)\n\n      sc.onSessionRestore((url) => {\n        history.replaceState(null, \"\", url)\n      });\n\n\n      await sc.handleIncomingRedirect({\n        restorePreviousSession: true\n      }).then((info) => {\n        if(info.isLoggedIn ==  true){\n          console.log(`Logged in with WebID [${info.webId}]`)\n          store.commit('solid/setSession',info)\n          let session = sc.getDefaultSession()\n          this.$getPodInfosFromSession(session)\n          // This line is not reached until you are successfully logged in\n          localStorage.setItem(LOCAL_STORAGE_KEY__SOLID_SESSION_RESTORE_URL, \"\")\n        }\n      })\n\n    },\n\n    app.config.globalProperties.$login = async function(issuer){\n      console.log(\"login\", issuer)\n      if (!sc.getDefaultSession().info.isLoggedIn) {\n        await sc.login({\n          oidcIssuer: issuer,\n          redirectUrl: window.location.href,\n          clientName: \"Brain\"\n        });\n      }\n    },\n\n    app.config.globalProperties.$logout = async function(){\n      let session = sc.getDefaultSession()\n      await session.logout()\n      store.commit('solid/setSession',null)\n      store.commit('solid/setPod', null)\n      //store.dispatch('nodes/clearStore')\n    },\n    app.config.globalProperties.$getPodInfosFromSession = async function(session){\n      // try{\n      let pod = {}\n      pod.logged = session.info.isLoggedIn\n      if (pod.logged) {\n        pod.webId = session.info.webId\n        pod = await this.$getPodInfos(pod)\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\n        pod.workspaces == undefined ? pod.workspaces = [] : \"\"\n\n        store.commit('solid/setPod', pod)\n        //  this.$checkChanges()\n        //this.$synchronize()\n        //  await this.$getVerses(pod)\n\n        if (pod.storage != null){\n          pod.brains = pod.storage+'workspaces.json'\n          app.config.globalProperties.$checkBrains()\n          //  this.$setCurrentThingUrl(pod.storage)\n          //  store.commit('booklice/setPath', pod.storage+'public/bookmarks/')\n          //let publicTagFile = pod.storage+'public/tags.ttl'\n          //let privateTagFile = podStorage+'private/tags.ttl'\n          // let tags = await this.$getTags(publicTagFile)\n          // console.log(\"############################tags\",tags)\n        }\n      }else{\n        store.commit('solid/setPod', null)\n        //  store.commit('solid/setThings', [])\n      }\n      // } catch(e){\n      //   alert(\"$getPodInfosFromSession \"+e)\n      // }\n    },\n    app.config.globalProperties.$getPodInfos = async function(pod){\n      try{\n        const dataset = await getSolidDataset( pod.webId, { fetch: sc.fetch });\n        let profile = await getThing( dataset, pod.webId );\n        pod.name = await getStringNoLocale(profile, FOAF.name);\n        pod.friends = await getUrlAll(profile, FOAF.knows).map(webId => {return {webId: webId}})\n        pod.storage = await getUrl(profile, WS.storage);\n\n        if (pod.storage == null){\n          // let storage = await getLink(pod.webId)\n          // console.log(\"storage\", storage)\n          // for community solid server with no pim:storage\n          pod.storage = pod.webId.split('/').slice(0,-2).join('/')+'/'\n        }\n\n\n        pod.photo = await getUrl(profile, VCARD.hasPhoto);\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\n        pod.workspaces = []\n\n        let publicTypeIndexUtl = pod.storage+'settings/publicTypeIndex.ttl'\n        const pti_ds = await getSolidDataset( publicTypeIndexUtl, { fetch: sc.fetch });\n        let indexes = await getThingAll(pti_ds)\n        for await (const i of indexes){\n          let types = await getUrlAll(i, \"http://www.w3.org/ns/solid/terms#forClass\");\n          //console.log(types)\n          if(types.includes(\"https://scenaristeur.github.io/verse#Workspace\")){\n            console.log(i)\n            let ws = {}\n            ws.name =  await getStringNoLocale(i, AS.name)\n            ws.url = await getUrl(i,SOLID.instance)\n            pod.workspaces.push(ws)\n          }\n        }\n        //console.log(ws)\n        //  pod.workspaces = await getUrlAll(pti_ds, \"http://www.w3.org/ns/solid/terms#forClass\", \"https://www.w3.org/ns/activitystreams#Collection\");\n        // pod.publicTags = await this.$getTags(pod.storage+'public/tags.ttl')\n        // store.commit(\"vatch/addToNetwork\", pod.publicTags)\n        //this.$subscribe(pod.storage)\n        //  console.log(\"getpodinfos\",pod)\n      }catch(e)\n      {\n        console.log(\"erreur\",e, pod)\n      }\n      console.log(pod)\n      return await pod\n    }\n\n    // async function getLink(url){\n    //   console.log('url', url)\n    //   const response = await fetch(url);\n    //   // const r1 = response.clone();\n    //   //\n    //   // const results = await Promise.all([response.json(), r1.text()]);\n    //   //\n    //   // console.log(\"json headers\",results[0]);\n    //   return response.headers.get('link').split(',').map(function(v) {\n    //     let link = v.split(';')[0]\n    //     console.log(link)\n    //     if (link == \"<http://www.w3.org/ns/pim/space#Storage>\"){\n    //       return url\n    //     }else{\n    //       let new_url = url.split('/').slice(0,-1).join('/')\n    //       console.log(new_url)\n    //        return getLink(new_url)\n    //       //return \"stop\"\n    //     }\n    //   });\n    // }\n\n\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","// import ForceGraph3D from '3d-force-graph';\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\nimport { v4 as uuidv4 } from 'uuid';\n// let graph = undefined\n\n\nimport {\n  getSolidDataset,\n  // getThingAll,\n  //getPublicAccess,\n  //  getAgentAccess,\n  //getSolidDatasetWithAcl,\n  //getPublicAccess,\n  //getAgentAccess,\n  getFile,\n  // isRawData,\n  // getContentType,\n  //saveFileInContainer,\n  getContainedResourceUrlAll,\n  //getStringNoLocaleAll,\n  // createContainerAt,\n  getSourceUrl,\n  // deleteFile,\n  //removeThing,\n  // removeAll,\n  //removeStringNoLocale,\n  //deleteContainer,\n  // addStringNoLocale,\n  // setThing,\n  // saveSolidDatasetAt,\n  //createSolidDataset,\n  // createThing,\n  // addUrl,\n  //buildThing,\n\n  overwriteFile,\n  // getStringNoLocale,\n  // getThing,\n  // getUrlAll,\n  // getUrl,\n  //addDatetime,\n  //  getDatetime,\n  //setUrl,\n  //setStringNoLocale,\n  //setDecimal,\n  //setInteger,\n  //  getDecimal,\n  //getInteger,\n  // setDatetime\n} from \"@inrupt/solid-client\";\n\n// import * as jsonld from 'jsonld';\n// import { RDF,  } from \"@inrupt/vocab-common-rdf\";\n\nimport * as sc from '@inrupt/solid-client-authn-browser'\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n\n    app.config.globalProperties.$saveBrainToSolid = async function(){\n      console.log(store.state.core.nodes)\n      if(store.state.solid.pod == null){\n        alert(\"Please Login to your pod before trying to save this brain\")\n      }else{\n\n        let suggestedpath = store.state.solid.pod.storage+\"brains/\"\n        console.log(suggestedpath)\n\n        let  path = prompt(\"Please confirm the path where to store the nodes\", suggestedpath);\n        console.log(path)\n        if(path != null){\n          path = !path.endsWith('/') ? path+= '/' : path\n\n          store.state.core.nodes.forEach(n => {\n            app.config.globalProperties.$spinnerAdd({id: \"saving \"+n.id})\n          });\n\n\n\n          for await (const n of store.state.core.nodes){\n            console.log(n.id, n)\n\n            n['@context']['@base'] = path\n\n            const savedFile = await overwriteFile(\n              path+lastPartOfUrl(n.id),\n              new Blob([JSON.stringify(n)], { type: \"application/ld+json\" }),\n              { contentType: \"application/ld+json\", fetch: sc.fetch }\n            );\n            //  console.log(savedFile)\n\n            console.log(`File saved at ${getSourceUrl(savedFile)}`);\n            app.config.globalProperties.$spinnerRemove({id: \"saving \"+n.id})\n\n\n            // let brainsDataset = await getSolidDataset(\n            //   store.state.solid.pod.brains, {\n            //     fetch: sc.fetch\n            //   });\n            //\n            //   let brain = await getThing(brainsDataset, path, {fetch: sc.fetch})\n            //   console.log(brain)\n            //   if (brain == null){\n            //\n            //\n            //\n            //\n            //\n            //\n            //\n            //\n            //     // let last = lastPartOfUrl(path)\n            //     // console.log(last)\n            //     // let brainThing = createThing({ name: last });\n            //     // brainThing = addStringNoLocale(brainThing, \"http://xmlns.com/foaf/0.1/name\", last);\n            //     // brainThing = addUrl(brainThing, RDF.type, \"https://scenaristeur.github.io/agent/brain\");\n            //     // brainsDataset = setThing(brainsDataset, brainThing);\n            //     // console.log(brainsDataset)\n            //     // const savedSolidDataset = await saveSolidDatasetAt(\n            //     //   store.state.solid.pod.brains,\n            //     //   brainsDataset,\n            //     //   { fetch: sc.fetch }             // fetch from authenticated Session\n            //     // );\n            //     // console.log(savedSolidDataset)\n            //   }\n\n          }\n\n          app.config.globalProperties.$spinnerAdd({id: \"saving \"+store.state.solid.pod.brains})\n          const brainsFile = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n          //  console.log(brainsFile)\n          const reader = new FileReader();\n          reader.onload = async () => {\n            try {\n\n              let brainsIndex = JSON.parse(reader.result)\n\n              let now = Date.now()\n              let currentBrain = {id: path, name: lastPartOfUrl(path), updated: now, checksum: 1000*Math.random()}\n              var index = brainsIndex.brains.findIndex(x => x.id==currentBrain.id);\n              if(index === -1){\n                currentBrain.created= now\n                brainsIndex.brains.push(currentBrain)\n              }else{\n                Object.assign(brainsIndex.brains[index], currentBrain)\n              }\n\n\n              await overwriteFile(\n                store.state.solid.pod.brains,\n\n                new Blob([JSON.stringify(brainsIndex)], { type: \"application/ld+json\" }),\n                { contentType: \"application/ld+json\", fetch: sc.fetch }\n              );\n\n              //reload brains\n              app.config.globalProperties.$checkBrains()\n              app.config.globalProperties.$spinnerRemove({id: \"saving \"+store.state.solid.pod.brains})\n            } catch (err) {\n              console.log(err);\n            }\n          };\n          reader.onerror = (error) => {\n            console.log(error);\n          };\n          reader.readAsText(brainsFile);\n\n        }else{\n          alert(\"saving to Solid Pod aborted\")\n        }\n      }\n    }\n\n\n    app.config.globalProperties.$loadBrainsFromWikidata = async function(tags){\n      console.log(tags)\n\n      tags.forEach(async function(t) {\n        console.log(t)\n        let node = {id: t.url, name: t.item.aliases && t.item.aliases[0] || t.item.label || t.text, color: \"lightblue\", url: t.url, source: \"https://wikidata.org\"}\n\n\n        await store.dispatch('core/saveNode', node)\n\n      });\n\n      await store.dispatch('core/getNodes')\n\n\n\n      // let test = \"https://www.wikidata.org/wiki/Special:EntityData/Q182665.jsonld\"\n      // console.log(test)\n      //loadExternalNeurones(tags)\n\n    }\n\n    app.config.globalProperties.$brainsFromPod = async function(pod){\n      let path = pod.storage+\"public/brains/\"\n      app.config.globalProperties.$spinnerAdd({id: \"loading \"+path})\n      let dataset = null\n      try{\n        dataset = await getSolidDataset( path, { fetch: sc.fetch });\n        let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\n        console.log(remotesUrl)\n      //  await loadNeurones(remotesUrl)\n        return remotesUrl\n      }\n      catch(e){\n        console.log(e)\n      }\n      app.config.globalProperties.$spinnerRemove({id: \"loading \"+path})\n    }\n\n\n    app.config.globalProperties.$loadBrainFromSolid = async function(path){\n      if (path == undefined){\n        let suggestedpath = store.state.solid.pod != null ? store.state.solid.pod.storage+\"brains/\" : \"https://solid.provider/brains_folder or example...\"\n        console.log(suggestedpath)\n        path = prompt(\"Load brain from \", suggestedpath);\n      }\n\n      if(path != null){\n        console.log(\"load brain from\", path)\n        app.config.globalProperties.$spinnerAdd({id: \"loading \"+path})\n        let dataset = null\n        try{\n          dataset = await getSolidDataset( path, { fetch: sc.fetch });\n          let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\n          console.log(remotesUrl)\n          await loadNeurones(remotesUrl)\n        }\n        catch(e){\n          alert(e)\n        }\n        app.config.globalProperties.$spinnerRemove({id: \"loading \"+path})\n      }\n    }\n\n    app.config.globalProperties.$checkBrains = async function(){\n      app.config.globalProperties.$spinnerAdd({id: \"checkBrains\"})\n      try{\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n        console.log(file)\n      }catch(e){\n        let default_brains = {\n          \"@context\": {\n            \"name\": \"http://xmlns.com/foaf/0.1/name\",\n            \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n            \"@base\": \"http://local/\",\n            \"@vocab\": \"https://scenaristeur.github.io/agent/\",\n            \"id\": \"@id\",\n            \"type\": \"@type\",\n            \"reverse\": \"@reverse\",\n            \"homepage\": {\n              \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n              \"@type\": \"@id\"\n            }\n          },\n          \"id\": uuidv4(),\n          \"name\": \"Brain Index\",\n          type: \"brainIndex\",\n          brains: [],\n          \"homepage\": \"https://scenaristeur.github.io/agent\",\n        };\n        await overwriteFile(\n          store.state.solid.pod.brains,\n          new Blob([JSON.stringify(default_brains)], { type: \"application/ld+json\" }),\n          { contentType: \"application/ld+json\", fetch: sc.fetch }\n        );\n      }\n\n      try{\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n        const reader = new FileReader();\n\n        reader.onload = async () => {\n          try {\n            let brainsIndex = JSON.parse(reader.result)\n            store.commit('core/setBrains',brainsIndex)\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsText(file);\n      }catch(e){\n        console.log(e)\n      }finally{\n        app.config.globalProperties.$spinnerRemove({id: \"checkBrains\"})\n      }\n    }\n\n\n    // async function loadExternalNeurones(sources){\n    //   // todo : move move outside \"solid\"-data-plugin\n    //   console.log(sources)\n    //   let test = \"simple\" // \"jsonld\" || \"json\"\n    //   // let test =  \"jsonld\"\n    //\n    //   for await (let s of sources){\n    //     console.log(s)\n    //     let id = s.item.id\n    //     let node = null\n    //\n    //     if(test == \"simple\"){\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".json\")\n    //       let data = await response.json()\n    //       console.log(data)\n    //       node = data.entities[id]\n    //       console.log(node)\n    //       await store.dispatch('core/saveNode', node)\n    //       //let node = JSON.parse(reader.result)\n    //\n    //     }else{\n    //       //full loading the graph of the resource\n    //       app.config.globalProperties.$spinnerAdd({id: \"loading \"+id})\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".jsonld\")\n    //       let jsonld = await response.json()\n    //       console.log(jsonld)\n    //       console.log(jsonld['@graph'])\n    //       let cpt = 1000\n    //       for(let item of jsonld['@graph']){\n    //         if (cpt ==0){\n    //           store.dispatch('core/getNodes')\n    //           app.config.globalProperties.$spinnerRemove({id: \"loading \"+id})\n    //           return\n    //         }\n    //         cpt--\n    //         app.config.globalProperties.$spinnerAdd({id: \"loading \"+cpt})\n    //         console.log(cpt)\n    //         console.log(item)\n    //         // let options = {}\n    //        item['@context'] == undefined ? item['@context'] = jsonld['@context'] : \"\"\n    //         // // item['@context'].id = '@id'\n    //         // // item['@context'].type = \"@type\"\n    //         // options.id = item['@id']\n    //         // options.name = item.about\n    //         // //  item.type = item['@type']\n    //         // console.log(options)\n    //         node = app.config.globalProperties.$newNode(item)\n    //         console.log(node)\n    //         await store.dispatch('core/saveNode', node)\n    //         app.config.globalProperties.$spinnerRemove({id: \"loading \"+cpt})\n    //\n    //       }\n    //\n    //     }\n    //\n    //     console.log(\"done\")\n    //\n    //     store.dispatch('core/getNodes')\n    //\n    //   }\n    //\n    //\n    //   //     var url = \"https://en.wikipedia.org/w/api.php\";\n    //   //\n    //   //     var params = {\n    //   //         action: \"query\",\n    //   //         format: \"json\",\n    //   //         titles: \"Lyon\",\n    //   //         prop: \"links\"\n    //   //     };\n    //   //\n    //   //     url = url + \"?origin=*\";\n    //   //     Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\n    //   //\n    //   //     fetch(url)\n    //   //         .then(function(response){return response.json();})\n    //   //         .then(function(response) {\n    //   //           console.log(response)\n    //   //             var pages = response.query.pages;\n    //   //             for (var p in pages) {\n    //   //                 for (var l of pages[p].links) {\n    //   //                     console.log(l.title);\n    //   //                 }\n    //   //             }\n    //   //         })\n    //   //         .catch(function(error){console.log(error);});\n    //   //\n    //   // }\n    //\n    //\n    //   // async function loadExternalNeurones1(sources){\n    //   //   console.log(sources)\n    //   //\n    //   //   var url = \"https://wikidata.org/w/api.php\";\n    //   //   // var url = \"https://en.wikipedia.org/w/api.php\";\n    //   //\n    //   //   var params = {\n    //   //     action: \"query\",\n    //   //     format: \"json\",\n    //   //     // titles: \"Albert Einstein\",\n    //   //     pageids: \"680\",\n    //   //     prop: \"links\"\n    //   //   };\n    //   //   // var params = {\n    //   //   //     action: \"query\",\n    //   //   //     format: \"json\",\n    //   //   //     list: \"tags\",\n    //   //   //     tgprop: \"hitcount\",\n    //   //   //     tglimit: \"3\"\n    //   //   // };\n    //   //\n    //   //   url = url + \"?origin=*\";\n    //   //   Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\n    //   //\n    //   //\n    //   //   fetch(url)\n    //   //   .then(function(response){return response.json();})\n    //   //   .then(function(response) {\n    //   //     var pages = response.query.pages;\n    //   //     for (var p in pages) {\n    //   //       for (var l of pages[p].links) {\n    //   //         console.log(l.title);\n    //   //       }\n    //   //     }\n    //   //   })\n    //   //   .catch(function(error){console.log(error);});\n    //   //\n    //   //   // fetch(url)\n    //   //   //     .then(function(response){return response.json();})\n    //   //   //     .then(function(response) {\n    //   //   //         var tags = response.query.tags;\n    //   //   //         for (var t in tags) {\n    //   //   //             console.log(tags[t].name);\n    //   //   //         }\n    //   //   //     })\n    //   //   //     .catch(function(error){console.log(error);});\n    //   //\n    //   //\n    //   //   // const filePromises = sources.map(async function(s) {\n    //   //   //   // let url = s.url+'.jsonld'\n    //   //   //   let url = s.item.concepturi+\".jsonld&origin*\"\n    //   //   //   //https://www.wikidata.org/entity/Q42.jsonld\n    //   //   //   console.log(\"loading\",s.text)\n    //   //   //   try{\n    //   //   //     console.log(\"fetching\",url)\n    //   //   //     const res = await fetch(url)\n    //   //   //     const data = await res.json()\n    //   //   //     console.log(data)\n    //   //   //     // this.items = suggestions.search\n    //   //   //     // console.log(this.items)\n    //   //   //     // this.autocompleteItems = suggestions.search.map(a => {\n    //   //   //     //   return { text: a.match.text+\" (\"+a.description+\")\", url: a.concepturi };\n    //   //   //     // });\n    //   //   //   }catch(e){\n    //   //   //     alert(e)\n    //   //   //   }\n    //   //   // });\n    //   //   //\n    //   //   // // Wait for all promises to be resolved\n    //   //   // await Promise.all(filePromises);\n    //   //   //  store.dispatch('core/getNodes')\n    //   //\n    //   //\n    // }\n\n    async function loadNeurones(remotesUrl){\n\n      // urls.forEach(async function (u) {\n      //   // let doc = null\n      //   console.log(u)\n      //   const file = await getFile(u, { fetch: sc.fetch });\n      //   //  console.log(file)\n      //   const reader = new FileReader();\n      //\n      //   reader.onload = async () => {\n      //     try {\n      //       //response =\n      //       // Resolve the promise with the response value\n      //       let doc = JSON.parse(reader.result)\n      //       let context = doc['@context']\n      //       console.log(\"result\", doc);\n      //\n      //       const compacted = await jsonld.compact(doc, context);\n      //       console.log(JSON.stringify(compacted, null, 2));\n      //\n      //       await store.dispatch('core/saveNode', compacted)\n      //\n      //\n      //     } catch (err) {\n      //       console.log(err);\n      //     }\n      //   };\n      //   reader.onerror = (error) => {\n      //     console.log(error);\n      //   };\n      //   reader.readAsText(file);\n      //\n      // });\n\n      // let nodes = []\n\n      const filePromises = remotesUrl.map(async function(url) {\n\n        if(url.endsWith('/')){\n          app.config.globalProperties.$loadBrainFromSolid(url)\n          return\n        }\n\n        // Return a promise per file\n        app.config.globalProperties.$spinnerAdd({id: \"loading \"+url})\n        const file = await getFile(url, { fetch: sc.fetch });\n        return new Promise( function(resolve, reject) {\n\n          const reader = new FileReader();\n          reader.onload = async () => {\n            try {\n              //response =\n              // Resolve the promise with the response value\n              let node = JSON.parse(reader.result)\n              await store.dispatch('core/saveNode', node)\n              app.config.globalProperties.$spinnerRemove({id: \"loading \"+url})\n              resolve(node);\n            } catch (err) {\n              reject(err);\n            }\n          };\n          reader.onerror = (error) => {\n            reject(error);\n          };\n          reader.readAsText(file);\n        });\n      });\n\n      // Wait for all promises to be resolved\n      await Promise.all(filePromises);\n      store.dispatch('core/getNodes')\n\n    }\n\n    app.config.globalProperties.$loadNeurone = async function(url){\n      app.config.globalProperties.$spinnerAdd({id: \"loading \"+url})\n      const file = await getFile(url, { fetch: sc.fetch });\n      return new Promise( function(resolve, reject) {\n\n        const reader = new FileReader();\n        reader.onload = async () => {\n          try {\n            //response =\n            // Resolve the promise with the response value\n            let node = JSON.parse(reader.result)\n          //  await store.dispatch('core/saveNode', node)\n            app.config.globalProperties.$spinnerRemove({id: \"loading \"+url})\n            resolve(node);\n          } catch (err) {\n            reject(err);\n          }\n        };\n        reader.onerror = (error) => {\n          reject(error);\n        };\n        reader.readAsText(file);\n      });\n    }\n\n    function lastPartOfUrl(str){\n      var n = str.lastIndexOf('/');\n      var result = str.substring(n + 1);\n      return result.length == 0 ? lastPartOfUrl(str.slice(0, -1)) : result\n    }\n\n    // app.config.globalProperties.$newNode = function(options = {}){\n    //   let node = {\n    //     \"@context\": {\n    //       \"name\": \"http://xmlns.com/foaf/0.1/name\",\n    //       \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n    //       \"id\": \"@id\",\n    //       \"type\": \"@type\",\n    //       \"reverse\": \"@reverse\",\n    //       \"homepage\": {\n    //         \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n    //         \"@type\": \"@id\"\n    //       }\n    //     },\n    //     \"id\": \"http://local/\"+uuidv4(),\n    //     \"name\": options.name || \"\",\n    //     type: \"neurone\",\n    //     //color: \"#00ff00\",\n    //     \"homepage\": \"http://manu.sporny.org/\",\n    //     // \"knows\": [{\n    //     //   \"name\": \"Daniele\"\n    //     // }, {\n    //     //   \"name\": \"Lucio\"\n    //     // }],\n    //     // \"knows\": [{\n    //     //   \"id\": \"_:7053c150-5fea-11e3-a62e-adadc4e3df76\",\n    //     //   \"name\": \"Boby\"\n    //     // }, {\n    //     //   \"id\": \"_:9d2bb59d-3baf-42ff-ba5d-9f8eab34ada4\",\n    //     //   \"name\": \"John\"\n    //     // }]\n    //   };\n    //\n    //   return node\n    // }\n    //\n    // app.config.globalProperties.$addProp = function(data){\n    //   let n = data.node\n    //   let p = data.propertie\n    //   let newValue = data.value\n    //   let oldValue = n[p]\n    //   console.log(typeof oldValue, oldValue)\n    //   if (oldValue == undefined){\n    //     n[p] = newValue\n    //   }else if(Array.isArray(oldValue)){\n    //     n[p].push(newValue)\n    //   }else{\n    //     n[p] = [oldValue, newValue]\n    //   }\n    //\n    //   // }else if(typeof oldValue == 'object'){\n    //   //\n    //   // }else if(typeof oldValue == 'string'){\n    //   //   n[p] = [oldValue, newValue]\n    //   // }else{\n    //   //   console.log(\"todo\", data)\n    //   // }\n    //\n    //\n    //\n    //   return n\n    // }\n    //\n    // app.config.globalProperties.$addLink = function(t){\n    //   console.log(t)\n    //   let s = t.subject\n    //   let p = t.predicate\n    //   let o = t.object\n    //   s = set(s, p, o)\n    //   o = setReverse(o, p, s)\n    //   return [s,o]\n    // }\n    //\n    // function setReverse(main, p, item){\n    //   main.reverse ==  undefined ? main.reverse = {}: \"\"\n    //   if(main.reverse[p] == undefined){\n    //     main.reverse[p] = {id: item.id, name: item.name}\n    //   }else{\n    //     switch (typeof main.reverse[p]) {\n    //       case \"string\":\n    //       console.log(\"TODO string\", main.reverse[p] )\n    //       break;\n    //       default:\n    //       if(Array.isArray(main.reverse[p])){\n    //         main.reverse[p].push({id: item.id, name: item.name})\n    //       }else{\n    //         let old = main.reverse[p]\n    //         main.reverse[p] = []\n    //         main.reverse[p].push(old)\n    //         main.reverse[p].push({id: item.id, name: item.name})\n    //       }\n    //     }\n    //   }\n    //   console.log(main)\n    //   return main\n    // }\n    // function set(main, p, item){\n    //   console.log(typeof main[p], main[p], item)\n    //   if(main[p] == undefined){\n    //     main[p] = {id: item.id, name: item.name}\n    //   }else{\n    //     switch (typeof main[p]) {\n    //       case \"string\":\n    //       console.log(\"TODO string\", main[p] )\n    //       break;\n    //       default:\n    //       if(Array.isArray(main[p])){\n    //         main[p].push({id: item.id, name: item.name})\n    //       }else{\n    //         let old = main[p]\n    //         main[p] = []\n    //         main[p].push(old)\n    //         main[p].push({id: item.id, name: item.name})\n    //       }\n    //     }\n    //   }\n    //   console.log(main)\n    //   return main\n    // }\n\n\n    // app.config.globalProperties.$findNodeByName = async function(name){\n    //   console.log(name)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    //\n    //\n    //\n    //\n    //\n    // }\n    //\n    // app.config.globalProperties.$findNodeById = async function(id){\n    //   console.log(id)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    // }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport \"./registerServiceWorker\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport BootstrapVue3 from \"bootstrap-vue-3\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue-3/dist/bootstrap-vue-3.css\";\n\nimport BrainPlugin from \"@/plugins/BrainPlugin\";\nimport CorePlugin from \"./plugins/core-plugin\";\nimport SolidPlugin from \"./plugins/solid-plugin\";\n\nimport SolidDataPlugin from \"./plugins/solid-data-plugin\";\n\ncreateApp(App)\n  .use(store)\n  .use(router)\n  .use(BootstrapVue3)\n  .use(CorePlugin, { store })\n  .use(SolidPlugin, { store })\n  .use(SolidDataPlugin, { store })\n  .use(BrainPlugin, {\n    store,\n    /* optional options */\n  })\n  .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"c6bdf67c\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"brain:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/brain/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbrain\"] = self[\"webpackChunkbrain\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4632); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createVNode","_component_router_link","to","_component_SolidLogin","_component_SpinnerComp","_component_router_view","class","_createElementBlock","_hoisted_1","$options","session","isLoggedIn","_hoisted_2","_component_b_form_group","_component_b_form_select","autofocus","size","$data","issuer","$event","options","issuers","onChange","login","first","_withCtx","_component_b_form_select_option","value","disabled","_hoisted_3","id","description","label","invalidFeedback","state","_component_b_form_input","other","trim","_component_b_button","variant","_hoisted_4","onClick","logout","href","webId","target","_hoisted_5","name","data","text","restore","methods","onInput","console","log","this","undefined","length","$login","$logout","computed","get","$store","solid","set","startsWith","__exports__","spinner","_component_b_spinner","small","type","_component_b_badge","reset","commit","core","components","SolidLogin","SpinnerComp","created","$checkSolidSession","render","register","ready","registered","cached","updatefound","updated","alert","offline","error","_component_b_container","fluid","_component_b_row","_component_b_col","_component_b_dropdown","_component_b_dropdown_item","workspaceCreate","_component_b_dropdown_divider","_component_b_button_toolbar","_component_b_button_group","nw","_createBlock","key","_component_b_form","onSubmit","onReset","placeholder","required","_toDisplayString","pod","photo","_component_WorkspaceList","brains","_component_b_list_group","_Fragment","_renderList","w","_component_b_list_group_item","button","workspaceRouter","path","props","$router","push","Workspace","constructor","opts","uuidv4","Date","now","urls","subspaces","bases","homepage","test","WorkspaceList","updateDir","workspaceSelected","url","$createWorkspace","typeChanged","routes","component","HomeView","router","createRouter","history","createWebHistory","process","workspaces","currentWorkspace","brain","mutations","addWorkspace","spinnerAdd","t","spinnerRemove","filter","x","resetSpinner","setBrain","b","setBrains","showBrainLoader","actions","namespaced","setSession","s","setPod","p","createStore","getters","modules","install","app","store","config","globalProperties","async","suggestedpath","storage","prompt","endsWith","container","createContainerAt","fetch","sc","savedFileMeta","overwriteFile","Blob","JSON","stringify","contentType","getSourceUrl","savedFileAcl","savedFileMain","$addToIndex","file","getFile","reader","FileReader","onload","brainsIndex","parse","result","indexUpdated","err","onerror","readAsText","e","$spinnerRemove","$getData","$getDataForSolid","$getDataForGdrive","$getDataForIpfs","comment","plugin","$spinnerAdd","task","window","Vue","use","LOCAL_STORAGE_KEY__SOLID_SESSION_RESTORE_URL","localStorage","setItem","location","toString","replaceState","restorePreviousSession","then","info","$getPodInfosFromSession","oidcIssuer","redirectUrl","clientName","logged","$getPodInfos","neuroneStore","$checkBrains","dataset","getSolidDataset","profile","getThing","getStringNoLocale","FOAF","friends","getUrlAll","knows","map","getUrl","WS","split","slice","join","VCARD","hasPhoto","publicTypeIndexUtl","pti_ds","indexes","getThingAll","i","types","includes","ws","AS","SOLID","instance","loadNeurones","remotesUrl","filePromises","$loadBrainFromSolid","Promise","resolve","reject","node","dispatch","all","lastPartOfUrl","str","n","lastIndexOf","substring","$saveBrainToSolid","nodes","forEach","savedFile","brainsFile","currentBrain","checksum","Math","random","index","findIndex","Object","assign","$loadBrainsFromWikidata","tags","item","aliases","color","source","$brainsFromPod","getContainedResourceUrlAll","default_brains","$loadNeurone","createApp","App","BootstrapVue3","CorePlugin","SolidPlugin","SolidDataPlugin","BrainPlugin","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","installedChunks","installedChunkData","promise","Error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}